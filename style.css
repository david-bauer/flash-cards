*, *::before, *::after {
    box-sizing: border-box;
}

body {
    /* colors */
    --pink: #ffafcc;
    --light-pink: #ffe2ed;
    --gold: #ffd42b;
    --brown: #33261D;
    --white: #fcfcfc;

    --accent: var(--gold);

    /* box shadow settings */
    --shadow-color: 339deg 48% 52%;
    --shadow-elevation-medium:
            0.3px 0.5px 0.7px hsl(var(--shadow-color) / 0.36),
            0.8px 1.6px 2px -0.8px hsl(var(--shadow-color) / 0.36),
            2.1px 4.1px 5.2px -1.7px hsl(var(--shadow-color) / 0.36),
            5px 10px 12.6px -2.5px hsl(var(--shadow-color) / 0.36);
    --shadow-elevation-low:
            0.3px 0.5px 0.7px hsl(var(--shadow-color) / 0.34),
            0.4px 0.8px 1px -1.2px hsl(var(--shadow-color) / 0.34),
            1px 2px 2.5px -2.5px hsl(var(--shadow-color) / 0.34);

    /* functional variables */
    --columns: 4;
    --animation-speed: 150ms;

    margin: 0;
    width: 100vw;

    display: flex;
    flex-direction: column;
    align-items: center;

    background-color: var(--pink);
}

h1 {
    text-transform: lowercase;
    text-align: center;
    font-family: "Adobe Devanagari", serif;
    margin: .5em 0 .5em 0;
}

p {
    line-height: 1.5em;
}

button {
    font-family: inherit;
    font-size: inherit;
    color: inherit;
    border: 2px solid transparent;
    border-radius: .25em;
    cursor: pointer;
}
/* prevent icons from stealing click events from their parent element */
i {
    pointer-events: none;
}

.content {
    background-color: var(--white);
    border-radius: 1rem;
    box-shadow: var(--shadow-elevation-medium);
    min-width: 500px;
    width: 75%;
    margin-top: 5vh;
    padding: 1em;
    color: var(--brown);
}

.flash-cards {
    display: grid;
    grid-template-columns: repeat(var(--columns), 1fr);
    gap: 1em;
    font-family: Bahnschrift, serif;
    margin: 1em;
    position: relative;
}


/* card styles */
.card {
    border-radius: 1rem;
    text-align: center;
    background-color: var(--light-pink);
    box-shadow: var(--shadow-elevation-low);
    aspect-ratio: 1;

    display: flex;
    flex-direction: column;
    justify-content: center;

    transform-style: preserve-3d;
    transition: transform var(--animation-speed) ease;
}

.card.flipped {
    transform: rotate3d(0, 1, 0, 180deg);
}

.card.moving {
    z-index: 2;
    will-change: transform;
    transition: transform 0s !important;
}


/* card face styles */
.card-face {
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: inherit;

    user-select: none;

    display:flex;
    flex-direction: column;
    justify-content: center;
    transition: height var(--animation-speed),
                border-radius var(--animation-speed);
}

.front {
    top: 0;
    transform: translateZ(1px);
    background-color: inherit;
}

.back {
    bottom: 0;
    transform: rotateY(180deg);
    background-color: var(--gold);
}

.card-face p {
    max-width: available;
    padding-left: .5em;
    padding-right: .5em;
    margin: auto;
    border-top: 5px solid transparent;
    border-bottom: 5px solid transparent;
    transition: background-color var(--animation-speed),
                border-bottom-color var(--animation-speed);
}
/* prevent user-entered line breaks */
.card-face p > br {
    display: none;
}


/* card-flipper styles */
.card-flipper {
    width: 100%;
    height: 100%;
    border-radius: inherit;
    transform: translateZ(2px);
    background-color: transparent;
    /*opacity: .25;*/
}
.flipped .card-flipper {
    transform: translateZ(-1px);
}


/* card specific modify controls  */
.modify-tools {
    position: absolute;
    right: .5rem;
    top: -1ch;
    transform: translateZ(2px);
    transform-style: preserve-3d;

    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: .5em;

    color: var(--pink);
    opacity: 0; /* controls start hidden */
    transition: opacity .2s;
}

.modify-tools .button {
    aspect-ratio: 1;
    /*border-radius: .5rem;*/
}


/* modify functionality */

.modifying:not(.editable) {
    cursor: move;
}
/* hide the flip button when in modification mode */
.modifying .card-flipper {
    transform: translateZ(-1px);
}
/* show the individual card controls when the modify button is pressed */
.modifying .modify-tools {
    opacity: 1;
}
/* show both faces at the same time */
.modifying > .card-face {
    height: 50%;
}
/* fix the horizontal border between the front and back elements */
.modifying .front {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
}
.modifying .back {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    transform: revert;
}
/* make the content of the flashcards look like an input form when editing mode is on */
.editable p {
    background-color: var(--white);
    border-bottom: 5px solid var(--pink);
    color: grey;
}
.editable p:focus {
    border-bottom: 5px solid var(--brown);
    outline: 2px solid var(--pink);
}


/* styles for elements that modify the other cards within the card set */
.card-settings {
    background-color: var(--pink);
}

.hidden {
    display: none;
}


/* form styles */
.create form {
    font-size: 1rem;
    margin: .5rem;
}

input[type="text"] {
    font-size: inherit;
    font-family: inherit;
    line-height: 2em;

    width: 100%;
    margin-bottom: .5em;
    padding-left: .5em;

    background-color: var(--white);
    border: none;
    border-bottom: 5px solid var(--light-pink);
    color: var(--brown);
    box-shadow: var(--shadow-elevation-low);
    transition: border-bottom-color var(--animation-speed);
}
input[type="text"]:focus {
    border-bottom: 5px solid var(--brown);
    outline: none;
}


/* button styles */
.button {
    background-color: var(--white);
    box-shadow: var(--shadow-elevation-low);
    transition: transform var(--animation-speed),
                background-color var(--animation-speed),
                color var(--animation-speed);
}
.button:hover {
    background-color: var(--brown);
    color: var(--white);
}
/* tool tips for buttons with labels */
.button[aria-label]::after {
    content: attr(aria-label);
    font-size: .8rem;
    position: absolute;
    right: calc(100% + .5rem);
    top: 0;
    width: max-content;
    padding: .5rem;
    background-color: var(--brown);
    color: var(--white);
    border-radius: .5rem;
    opacity: 0;
    transition: opacity var(--animation-speed) 300ms;
    pointer-events: none;
}
.button[aria-label]:hover::after {
    opacity: 1;
}
/* indent button when pushed */
.button[aria-pressed="true"] {
    transform: translate3d(1px, 1px, 0);
    background-color: var(--pink);
    color: var(--white);
}


/* content reflow */
@media screen and (max-width: 860px){
    body {
        --columns: 3;
    }
}

@media screen and (min-width: 1200px){
    body {
        --columns: 5;
    }
}